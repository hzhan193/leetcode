/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    private List<TreeNode> list;;
    public void flatten(TreeNode root) {
        list = new ArrayList<>();
        preOrder(root);
        for(int i = 0; i < list.size() - 1; i++){
            list.get(i).left = null;
            list.get(i).right = list.get(i + 1);
            //System.out.println(list.get(i).val);
        }
    }
    
    public void preOrder(TreeNode node){
        if(node != null) {
            list.add(node);
            preOrder(node.left);
            preOrder(node.right);
        }
    }
}
