/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        if(head == null || head.next == null) return head;
        Stack<ListNode> set = new Stack<>();
        ListNode p = head;
        while(p != null){
            set.push(p);
            p= p.next;
        }
        head = set.pop();
        p = head;
        while(!set.isEmpty()){
            ListNode node = set.pop();
            p.next = node;
            p = node;
        }
        p.next = null;
        return head;
    }
}
