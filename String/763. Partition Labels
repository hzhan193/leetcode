class Solution {
    public List<Integer> partitionLabels(String s) {
        List<Integer> ans = new ArrayList<>();
        
        /* the map stores each character and the position
         * last appeared index in the string of s.
         */
        HashMap<Character, Integer> map = new HashMap<>();
        
        for(int i = 0; i < s.length(); i++) {
            map.put(s.charAt(i), i);
        }
        //System.out.println(map);
        
        int curEnd = 0;// the rightmost index of the current character at index i 
        int start = 0;
        
        for(int i = 0; i < s.length(); i++) {
            int lastIndex = map.get(s.charAt(i));
            // if the last index of the character is larger than current last index, 
            // then extend the the right bound, otherwise, keep the current bound.
            // when the next character's last index drop into the current charater's 
            // last index, this means there is no more next charater out that current 
            // last index bound.
            curEnd = Math.max(curEnd, lastIndex);
                
            if(i >= curEnd) {
                ans.add(curEnd - start + 1);
                start = i + 1;
            }
        }
        return ans;
    }
}
