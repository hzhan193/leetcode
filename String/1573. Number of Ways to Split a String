class Solution {
    public int numWays(String s) {
        int len = s.length();
        int cnt = 0;
        int m = 1000000007;
        List<Integer> ones = new ArrayList<>();
        for(int i = 0; i < len; i++){
            if(s.charAt(i) == '1'){
                cnt++;
                ones.add(i);
            }
        }

        if(cnt % 3 != 0){
            return 0;
        }
        if(ones.isEmpty()){
            return (int)(((len - 1L) * (len - 2) / 2L) % m);
        }
        
        int prefix_ones = cnt / 3;
        long interval1 = (long)ones.get(prefix_ones) - (long)ones.get(prefix_ones - 1);
        long interval2 = (long)ones.get(2 * prefix_ones) - (long)ones.get(2 * prefix_ones - 1);

        return (int)((interval1 * interval2) % m);
        
    }
}
