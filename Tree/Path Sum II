/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    private List<List<Integer>> ans;
    private List<Integer> list;
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        ans = new ArrayList<>();
        list = new ArrayList<>();
        
        helper(root, targetSum);
        
        return ans;
    }
    
    public void helper(TreeNode node, int remain) {
        if(node == null) return;
        if(node.left == null && node.right == null && remain == node.val) {
            list.add(node.val);
            ans.add(new ArrayList<Integer>(list));
            list.remove(list.size() - 1);
            return;
        }
        list.add(node.val);
        //System.out.println(remain + ", " + node.val);
        helper(node.left, remain - node.val);
        helper(node.right, remain - node.val);
        list.remove(list.size() - 1);
       
    }
}
