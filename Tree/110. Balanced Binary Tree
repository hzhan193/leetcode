/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isBalanced(TreeNode root) {
        if(root == null)   return true;
        int h1 = getHight(root.left);
        int h2 = getHight(root.right);
        System.out.println(h1 + "," + h2);
        return (Math.abs(h1 - h2) <= 1) && isBalanced(root.left) && isBalanced(root.right);
    }
    public int getHight(TreeNode node){
        if(node == null) return 0;
        return 1 + Math.max(getHight(node.left), getHight(node.right));
    }
}
