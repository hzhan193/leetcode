/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode p = l1;
        ListNode q = l2;
        ListNode head = new ListNode(0);
        ListNode current = head;
        ListNode next;
        int carry = 0;
        
        while(p != null || q != null){
            int x = 0;
            int y = 0;
            if(p != null){
                x = p.val;
                p = p.next;
            }
            if(q != null){
                y = q.val;
                q = q.next;
            }
            int sum = carry + x + y;
            carry = sum / 10;
            current.val = sum % 10;
            if(p!= null || q!= null){
                current.next = new ListNode(carry);  
                current = current.next;
            }
        }
        if(carry > 0){
            current.next = new ListNode(carry);  
        }
        return head;
    }
}
