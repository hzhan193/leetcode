class Solution {
    List<List<Integer>> ans;
    List<Integer> list;
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        ans = new ArrayList<>();
        list = new ArrayList<>();
        
        Arrays.sort(nums); // to avoid duplicates
        
        for(int len = 0; len <= nums.length; len++) {
            backtracking(nums, len, 0);
        }
        
        return ans;
    }
    
    public void backtracking(int[] nums, int len, int start) {
        if(list.size() == len && !ans.contains(list)) {
            ans.add(new ArrayList<Integer>(list));
            return;
        }
        
        for(int i = start; i < nums.length; i++) {
            list.add(nums[i]);
            backtracking(nums, len, i + 1);
            list.remove(list.size() - 1);
        }
    }
}
