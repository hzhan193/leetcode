/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head == null || head.next == null) return head;
        int len = 0;
        int rotate = 0;
        ListNode p = head;
        while(p != null){
            p = p.next;
            len++;
        }
        rotate = k % len;
        if(rotate == 0) return head;
        
        ListNode fast = head;
        ListNode slow = head;
        ListNode cur = null;
        while(rotate > 0){
            fast = fast.next;
            rotate--;
        }
        while(fast != null && fast.next != null){
            cur = slow;
            slow = slow.next;
            fast = fast.next;
        }
        cur = slow.next;
        fast.next = head;
        slow.next = null;
        return cur;
    }
}
